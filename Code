import xml.etree.ElementTree as ET
import os
import sys
import collections
import re

# The script checks if all the images for error scenarios exists in the right path, case sensitive

imageList = []
fileList= []

#open the file and start parsing
def extractImagesPathsInErrorscenarios():
    path = os.path.join(os.getcwd(), sys.argv[1])
    for filename in os.listdir(sys.argv[1]):
        if not filename.endswith(sys.argv[3]): continue
        fullname = os.path.join(path, filename)
        root = ET.parse(fullname).getroot()
        # find the tag images in xmls
        for type_tag in root.findall(sys.argv[2]):
            tagImageValue = type_tag.text
            checkIfPathsExistsOnDisk(filename, path, tagImageValue)

# conditions to verify if the path exists, case sensitive
def checkIfPathsExistsOnDisk(filename, path, tagImageValue):
    checkIfTagImageIsCorrect(tagImageValue, filename)
    if (tagImageValue.split("/")):
        picturePath = tagImageValue.split("/")
        checkIfAllThePathisCaseSensitive(path, picturePath, filename, tagImageValue)

# conditions to verify if the image tag is right wrote and if it ends with the right extensions
def checkIfTagImageIsCorrect(tagImageValue, filename):
    pattern = "^images\/[A-Za-z0-9\_\ \-\#\.\+]{1,}\/[A-Za-z0-9\_\ \-\#\.\+]{1,}\.(jpe?g|png|gif|bmp|JPE?G|PNG|GIF|BMP)$"
    result = re.match(pattern, tagImageValue)
    if not (result):
        print '======== Wrong format of tag image, please check!======'
        print ("XML file: "+filename+" - "+"Name of Image: "+tagImageValue)
        sys.exit(1)

# conditions to verify if all the path is case sensitive
def checkIfAllThePathisCaseSensitive(path, picturePath, filename, tagImageValue):
    if not (picturePath[0] in os.listdir(path) and picturePath[1] in os.listdir(os.path.join(path, picturePath[0])) 
            and picturePath[2] in os.listdir(os.path.join(path, picturePath[0], picturePath[1]))):
       appendFileToErrorList(filename, tagImageValue)

#append filename and tag image
def appendFileToErrorList(filename, tagImageValue):
        fileList.append(filename)
        imageList.append(tagImageValue)

#printing the lists
def printLists(fileList, imageList):
    for key, value in zip(fileList, imageList):
        print ("XML file: "+key+" - "+"Name of Image: "+value)

def main():
    extractImagesPathsInErrorscenarios()
    print '======== Checking if all images in errorscenarios are in place! ========'
    if not(len(imageList)==0):
        print '======== Start of images in errorscenarios that are not in place ========'
        printLists(fileList, imageList)
        print '======== End of images list. Make the corrections and run build again ======'
        sys.exit(1)
    else:
        print '======== All the images in errorscenarios are in place======'
        sys.exit(0)

if __name__ == '__main__':
      exit(main())
